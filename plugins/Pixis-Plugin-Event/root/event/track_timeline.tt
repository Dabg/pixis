[%
    DEFAULT cell_height  = 30;
    DEFAULT cell_width   = 150;
    DEFAULT border_width = 1;
    DEFAULT timeline_id  = 'schedule';
    DEFAULT border_color = '999';
    DEFAULT editable     = 0;
    DEFAULT timeslot_left = '4em';
    DEFAULT timeslot_width = '100px';
    DEFAULT timeslot_bgcolor = 'ee9';
%]
[% MACRO timeslot BLOCK -%]
<div [% IF timeslot_container_id %]id="[% timeslot_container_id %]" [% END %]style="position: absolute; font-size: 9pt; background-color: #[% timeslot_bgcolor %]; border: [% border_width %]px solid #000; width: [% timeslot_width %]; height: [% cell_height - 2 * border_width %]px; left: [% timeslot_left %]"><div [% IF timeslot_id %]id="[% timeslot_id %]" [% END %]style="overflow: hidden; height: inherit; width: inherit">[% timeslot_content %]</div></div>
[%- END # MACRO %]

<div id="schedule_container">
<div id="timeline_date"></div>
<div id="[% timeline_id %]" style="position:relative"></div>
</div><!-- schedule_container -->

<script lang="javascript" type="text/javascript">
    var Pixis = { Event: { TrackTimeline: {} } };
    Pixis.Event.TrackTimeline.start_hour = [% start_hour || 0%];
    Pixis.Event.TrackTimeline.end_hour = [% end_hour || 23 %];

    var track_dates = new Array();
    var date_index  = 0;

    $(document).ready( function() {
[% 
    cur     = event.start_on.clone.truncate(to => 'day');
    end_day = cur.clone.add(days => 2); 
    # event.end_on.clone.truncate(to => 'day');
    WHILE(cur <= end_day) %]
        track_dates.push(new Date([% cur.year %], [% cur.month %] - 1, [% cur.day %]));
[%
        CALL cur.add(days => 1);
    END  %]
    } );

    $(document).ready( function() {
        var track_date = track_dates[date_index];
        $("#timeline_date").text(
            [ track_date.getFullYear(), track_date.getMonth() + 1, track_date.getDate() ].join('/'));
    } );
    $(document).ready( function() {
        var tl = '';
        for( var x = Pixis.Event.TrackTimeline.start_hour; x <= Pixis.Event.TrackTimeline.end_hour; x++) {
            tl += '<div style="width: [% cell_width %]px; height: [% cell_height - border_width %]px; background-color: ddd; border-bottom: [% border_width %]px solid #[% border_color %];';
            if (x == 0) {
                tl += 'border-top: [% border_width %]px solid #[% border_color %]';
            }
            tl += '">';
            if (x < 10) {
                tl += '0' + x + ':00';
            } else {
                tl += x + ':00';
            }
            tl += "</div>\n";
        }
        $('#[% timeline_id %]').append(tl);
    });

    $(document).ready( function() {
        console.log("invoking getJSON");
    $.getJSON("[% c.uri_for('/event', event.id, 'track', track.id, 'session', 'list' ) %]", null, function(sessions) {
            console.log("got response back");
console.log($.dump(sessions));
        $.each(sessions, function(i, session) {
            if (session.start_on < Pixis.Event.TrackTimeline.start_hour * 3600) {
                return;
            }

            var scaled_start  = (session.start_on / 3600 - Pixis.Event.TrackTimeline.start_hour);
            var top     = scaled_start * [% cell_height %] + [% border_width %];
            var scaled_duration = session.duration / 3600;
            var height  = scaled_duration * [% cell_height %] - [% border_width %];
            var elem = $('[% timeslot( timeslot_content => "' + session.title + '") %]');
            elem.css("top", top);
            elem.css("height", height);

            $("#[% timeline_id %]").append(elem);
        })
    });
        console.log("now wait for response...");
    });

[%# This stuff here is only required for timelines that are editable %]
[% IF (editable) %]
    function updateDuration (height) {
        var dur = 60 * height / [% cell_height %];
        var minus = dur - dur % 15;
        var plus  = dur - dur % 15 + 15;
        if (Math.abs(dur - minus) < Math.abs(dur - plus)) {
            dur = minus;
        } else {
            dur = plus;
        }

        $("#session_duration").attr('value', dur);
    }

    function updateDateTime(top) {
        var hour = Math.floor( top / [% cell_height %]);
        var min  = Math.floor( (top % [% cell_height %] )/ [% cell_height %] * 60);
        var minus = min - min % 15;
        var plus  = min - min % 15 + 15;;
        if (Math.abs(min - minus) < Math.abs(min - plus)) {
            min = minus;
        } else {
            min = plus;
        }
        if (min == 60) {
            min = 0;
        }

        if (hour < 10) {
            hour = '0' + hour;
        }
        if (min < 10) {
            min = '0' + min;
        }
        var track_date = track_dates[date_index];
        $("#session_start_on").attr('value', [ track_date.getFullYear(), track_date.getMonth() + 1, track_date.getDate() ].join('/') + ' ' +  hour + ':' + min);
    }

    var disable_mousedown = 0;
    $("#[% timeline_id %]").mousedown(function(e) {
        if (disable_mousedown) { return; }
        disable_mousedown = 1;
        
        var top = e.pageY - e.target.offsetParent.offsetTop;
        top -= (top % [% (cell_height / 4) %]) - 1;

        var elem = document.getElementById("timeslot-container");
        /* insert my new element. the first time round, we need to also
         * trigger the resize handler so duration gets updated
         */
        if (elem != null) {
            console.log("timeslot-container already exists");
            elem = $(elem);
        } else {
            elem = $('[% timeslot( 
timeslot_container_id => 'timeslot-container',
timeslot_id => 'timeslot',
timeslot_content => "' + \$('#session_title').attr('value') + '" ) %]');

            $("#[% timeline_id %]").append(elem);

            var dragstop = function(e, ui) {
                var top = e.target.offsetTop;
                /* top is in pixels, convert it to hours and minutes */
                updateDateTime( top );
            };
            elem.draggable({
                grid: [ [% cell_width %], [% cell_height / 4 %] ],
                stop: dragstop,
                containment: '#[% timeline_id %]'
            });
            elem.resizable({
                grid: [ [% cell_width %], [% cell_height / 4 %] ],
                containment: '#[% timeline_id %]',
                resize: function(e) {
                    updateDuration($(e.target).innerHeight());
                }
            });
        }

        elem.css("top", top + 'px');
        elem.trigger("resize");
        updateDateTime(top);
        updateDuration($(elem).innerHeight());
    });
[% END # if editable %]
</script>

